name: Release
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
      - labeled
      - opened
      - reopened
      - synchronize
      - unlabeled
concurrency: release

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      packages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    timeout-minutes: 10
    container: ros:humble
    outputs:
      new_version: ${{ steps.new_version.outputs.new_version }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_SECRET_KEY }}

      - uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: pull-request

      - name: Install catkin pkg
        run: apt update && apt install -y python3-catkin-pkg git curl

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          fetch-tags: true
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup git
        run: |
          git config --global user.name  "Release Bot"
          git config --global user.email "action@github.com"
          git config --global --add safe.directory /__w/merge-queue-test/merge-queue-test
          git config pull.rebase false

      - name: Get old version
        id: old_version
        run: |
          echo "old_version=$(catkin_package_version)" >> $GITHUB_OUTPUT

      - name: Pull head branch
        run: git pull ${{ steps.pull-request.outputs.pr.head.repo.clone_url }} ${{ github.head_ref }}

      - name: Bump patch version
        if: (contains(steps.pull-request.outputs.pr.labels.*.name, 'bump patch'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump patch
          catkin_package_version --bump patch

      - name: Bump minor version
        if: (contains(steps.pull-request.outputs.pr.labels.*.name, 'bump minor'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump minor
          catkin_package_version --bump minor

      - name: Bump major version
        if: (contains(steps.pull-request.outputs.pr.labels.*.name, 'bump major'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump major
          catkin_package_version --bump major

      - name: Get new version
        id: new_version
        run: |
          echo "new_version=$(catkin_package_version)" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: github.event_name == 'push'
        run: |
          git add .
          git commit -m "Bump from version ${{ steps.old_version.outputs.old_version }} to version ${{ steps.new_version.outputs.new_version }}"
          git push --set-upstream origin main

      - name: Get linked issues
        id: linked_issues
        uses: hossainemruz/linked-issues@main
        with:
          pr_url: ${{steps.pull-request.outputs.pr.html_url}}
          format: ExternalIssueRef
        continue-on-error: true

      - name: Update release description
        env:
          PULL_REQUEST_BODY: ${{ steps.pull-request.outputs.pr.body }}
        run: |
          echo "$PULL_REQUEST_BODY" >> release_description.txt
          echo "" >> release_description.txt
          echo "# Related Issues  " >> release_description.txt
          echo "${{ steps.linked_issues.outputs.issues }}" >> release_description.txt

      - name: Get release description
        id: get_release_description
        uses: mathiasvr/command-output@v2.0.0
        with:
          run: cat release_description.txt

      - name: Create a GitHub release
        if: github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.new_version.outputs.new_version }}
          name: ${{ steps.new_version.outputs.new_version }}
          body: ${{ steps.get_release_description.outputs.stdout }}
